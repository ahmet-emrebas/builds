{"version":3,"sources":["./src/app/store/services/message.service.ts","./src/app/common/chatbot/chatbot.component.html","./src/app/common/chatbot/chatbot.component.ts","./src/app/store/services/product.service.ts","./src/app/common/navigation/ae-navigation.module.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/common/app.common.module.ts","./src/app/store/services/service.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/common/chatbot/chatbot.module.ts","./src/app/common/navigation/ae-navigation.service.ts","./src/app/store/reducer.config.ts","./src/app/store/store.module.ts","./src/app/common/navigation/index.ts","./src/app/app.routes.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/store/index.ts","./src/app/common/app.translate.module.ts","./src/app/store/services/user.service.ts","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/store/store.service.ts","./src/app/store/services/task.service.ts","./src/app/store/entity-metadata.ts","./src/app/store/services/info.service.ts","./src/app/app.toolbar.ts","./src/app/common/navigation/ae-navigation.component.ts","./src/app/common/navigation/ae-navigation.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\n\r\nexport interface Message {\r\n  id: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessageService extends EntityCollectionServiceBase<Message> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Message', serviceElementsFactory);\r\n  }\r\n}\r\n","<div\n  class=\"d-flex flex-column align-items-end\"\n  fxLayout=\"row\"\n  class=\"chatbot-container\"\n>\n  <button\n    mat-mini-fab\n    class=\"mb-1\"\n    *ngIf=\"!isChatOpen\"\n    (click)=\"isChatOpen = !isChatOpen\"\n  >\n    <mat-icon>smart_toy</mat-icon>\n  </button>\n\n  <mat-card class=\"message-card\" *ngIf=\"isChatOpen\">\n    <button\n      mat-mini-fab\n      color=\"gray\"\n      class=\"close-button\"\n      (click)=\"isChatOpen = !isChatOpen\"\n    >\n      <mat-icon>close</mat-icon>\n    </button>\n\n    <mat-card-content class=\"card-content\">\n      <mat-form-field class=\"field\" appearance=\"outline\">\n        <textarea\n          matInput\n          placeholder=\"Message\"\n          autocomplete=\"off\"\n          class=\"message-input\"\n          (keyup)=\"handleKeyup($event)\"\n          [(ngModel)]=\"message\"\n        ></textarea>\n      </mat-form-field>\n    </mat-card-content>\n  </mat-card>\n</div>\n\n<div class=\"ripple\" *ngIf=\"isChatOpen\" (click)=\"isChatOpen = !isChatOpen\"></div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.scss'],\n})\nexport class ChatbotComponent implements OnInit {\n  isChatOpen = true;\n  message = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  handleKeyup(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.message = '';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\n\r\nexport interface Product {\r\n  id: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService extends EntityCollectionServiceBase<Product> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Product', serviceElementsFactory);\r\n  }\r\n}\r\n","import { LayoutModule } from '@angular/cdk/layout';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { AeNavigationComponent } from './ae-navigation.component';\r\n\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\r\nimport { AeNavigationService } from './ae-navigation.service';\r\n\r\n@NgModule({\r\n  declarations: [AeNavigationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LayoutModule,\r\n    FlexLayoutModule,\r\n    FlexModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatTreeModule,\r\n    MatTooltipModule,\r\n    MatBadgeModule,\r\n    RouterModule,\r\n  ],\r\n  exports: [AeNavigationComponent],\r\n  providers: [AeNavigationService],\r\n})\r\nexport class NavigationModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppTranslateModule } from './app.translate.module';\r\nimport { ChatbotModule } from './chatbot/chatbot.module';\r\nimport { NavigationModule } from './navigation';\r\n\r\n@NgModule({\r\n  exports: [\r\n    HttpClientModule,\r\n    NavigationModule,\r\n    ChatbotModule,\r\n    AppTranslateModule,\r\n  ],\r\n})\r\nexport class AppCommonModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\n\r\nexport interface Service {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ServiceService extends EntityCollectionServiceBase<Service> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Service', serviceElementsFactory);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatbotComponent } from './chatbot.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { FlexLayoutModule, FlexModule } from '@angular/flex-layout';\n@NgModule({\n  declarations: [ChatbotComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatTooltipModule,\n    FlexLayoutModule,\n    FlexModule,\n  ],\n  exports: [ChatbotComponent],\n})\nexport class ChatbotModule {}\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ButtonLike } from './types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AeNavigationService {\r\n  // public\r\n  public readonly style$: Subject<CSSStyleDeclaration> = new Subject<CSSStyleDeclaration>();\r\n  public readonly menu$: Subject<Partial<ButtonLike>[]> = new Subject<\r\n    Partial<ButtonLike>[]\r\n  >();\r\n\r\n  public readonly toolbar$: Subject<Partial<ButtonLike>[]> = new Subject<\r\n    Partial<ButtonLike>[]\r\n  >();\r\n\r\n  /**\r\n   * @description Set menu\r\n   * @param menuItems\r\n   */\r\n  public menu(menuItems: Partial<ButtonLike>[]) {\r\n    setTimeout(() => {\r\n      this.menu$.next(menuItems);\r\n    });\r\n  }\r\n  /**\r\n   * @description Set style\r\n   * @param style\r\n   */\r\n  public style(style: CSSStyleDeclaration) {\r\n    setTimeout(() => {\r\n      this.style$.next(style);\r\n    });\r\n  }\r\n  /**\r\n   * @description Set toolbar\r\n   * @param toolbarItems\r\n   */\r\n  public toolbar(toolbarItems: Partial<ButtonLike>[]) {\r\n    setTimeout(() => {\r\n      this.toolbar$.next(toolbarItems);\r\n    });\r\n  }\r\n}\r\n","import { createAction, createReducer, on, props } from '@ngrx/store';\r\n\r\nexport interface ConfigState {\r\n  name: string;\r\n  logo: string;\r\n  theme: string;\r\n}\r\n\r\nconst initialconfig: Partial<ConfigState> = {};\r\n\r\nconst name = createAction('[CONFIG] SET NAME', props<{ name: string }>());\r\nconst logo = createAction('[CONFIG] SET LOGO', props<{ logo: string }>());\r\nconst theme = createAction('[CONFIG] SET THEME', props<{ theme: string }>());\r\n\r\nexport const reducer = () =>\r\n  createReducer(\r\n    initialconfig,\r\n    on(name, (state, action) => ({ ...state, ...action })),\r\n    on(logo, (state, action) => ({ ...state, ...action })),\r\n    on(theme, (state, action) => ({ ...state, ...action }))\r\n  );\r\n\r\nexport const actions = () => ({ name, logo, theme });\r\n","import { NgModule } from '@angular/core';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { environment } from '@src/environments/environment';\r\nimport { EntityDataModule } from '@ngrx/data';\r\nimport { entityConfig } from './entity-metadata';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreState } from './store.state';\r\nimport { reducer as getConfigReducer } from './reducer.config';\r\nimport { AppStoreService } from './store.service';\r\nimport { UserService } from './services/user.service';\r\nimport { ServiceService } from './services/service.service';\r\nimport { MessageService } from './services/message.service';\r\nimport { ProductService } from './services/product.service';\r\nimport { TaskService } from './services/task.service';\r\nimport { InfoService } from './services/info.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    StoreModule.forRoot<StoreState>({\r\n      config: getConfigReducer(),\r\n    }),\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25,\r\n      logOnly: environment.production,\r\n    }),\r\n    EffectsModule.forRoot([]),\r\n    EntityDataModule.forRoot(entityConfig),\r\n  ],\r\n  exports: [StoreModule, StoreDevtoolsModule, EntityDataModule, EffectsModule],\r\n  providers: [\r\n    AppStoreService,\r\n    // Entity services\r\n    UserService,\r\n    ServiceService,\r\n    MessageService,\r\n    ProductService,\r\n    TaskService,\r\n    InfoService,\r\n  ],\r\n})\r\nexport class AppStoreModule {}\r\n","export * from './ae-navigation.module';\r\nexport * from './ae-navigation.component';\r\nexport * from './ae-navigation.service';\r\n","import { AboutComponent } from './about/about.component';\r\nimport { ButtonLike } from './common/navigation/types';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nexport const routes: Partial<ButtonLike>[] = [\r\n  {\r\n    icon: 'home',\r\n    label: 'Home',\r\n    path: 'home',\r\n    iconColor: 'primary',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    icon: 'sentiment_satisfied_alt',\r\n    label: 'About',\r\n    path: 'about',\r\n    iconColor: 'primary',\r\n    component: AboutComponent,\r\n  },\r\n  {\r\n    icon: 'contact_mail',\r\n    label: 'Contact',\r\n    path: 'contact',\r\n    iconColor: 'primary',\r\n    component: ContactComponent,\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { routes } from './app.routes';\r\nimport { AeNavigationService } from './common/navigation';\r\nimport { toolbar } from './app.toolbar';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Angular Projects';\r\n  constructor(private navigationService: AeNavigationService) {\r\n    this.navigationService.menu(routes);\r\n    this.navigationService.toolbar(toolbar);\r\n  }\r\n  ngOnInit(): void {\r\n    document.title = this.title;\r\n  }\r\n}\r\n","<ae-navigation>\r\n  <ng-container main-content-top>\r\n    <router-outlet></router-outlet>\r\n  </ng-container>\r\n</ae-navigation>\r\n\r\n<app-chatbot></app-chatbot>\r\n","export * from './store.module';\r\nexport * from './store.service';\r\nexport * from './store.state';\r\nexport * from './reducer.config';\r\nexport * from './entity-metadata';\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: createTranslateLoader,\r\n        deps: [HttpClient],\r\n      },\r\n      defaultLanguage: 'en',\r\n    }),\r\n  ],\r\n  exports: [TranslateModule],\r\n})\r\nexport class AppTranslateModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\n\r\nexport interface User {\r\n  id: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService extends EntityCollectionServiceBase<User> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('User', serviceElementsFactory);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppCommonModule } from './common/app.common.module';\r\nimport { AppStoreModule } from './store';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, HomeComponent, AboutComponent, ContactComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AppCommonModule,\r\n    AppStoreModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact works!</p>\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AppStoreService {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\n\r\nexport interface Task {\r\n  id: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TaskService extends EntityCollectionServiceBase<Task> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Task', serviceElementsFactory);\r\n  }\r\n}\r\n","import {\r\n  EntityMetadataMap,\r\n  EntityDataModuleConfig,\r\n  EntityPluralNames,\r\n} from '@ngrx/data';\r\n\r\nconst entityMetadata: EntityMetadataMap = {\r\n  User: {},\r\n  Service: {},\r\n  Task: {},\r\n  Product: {},\r\n  Message: {},\r\n};\r\n\r\nconst pluralNames: EntityPluralNames = {\r\n  User: 'Users',\r\n  Service: 'Services',\r\n  Task: 'Tasks',\r\n  Product: 'Products',\r\n  Message: 'Messages',\r\n};\r\n\r\nexport const entityConfig: EntityDataModuleConfig = {\r\n  entityMetadata,\r\n  pluralNames,\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory,\r\n} from '@ngrx/data';\r\n\r\nexport interface Info {\r\n  id: number;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InfoService extends EntityCollectionServiceBase<Info> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Info', serviceElementsFactory);\r\n  }\r\n}\r\n","import { ButtonLike } from './common/navigation/types';\r\n\r\nexport const toolbar: Partial<ButtonLike>[] = [\r\n  {\r\n    icon: 'phone',\r\n    href: 'tel:832-874-2422',\r\n    position: 'right',\r\n  },\r\n];\r\n","import { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ComponentRef,\r\n  ElementRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { IconType } from 'ng-icon-type';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AeNavigationService } from './ae-navigation.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'ae-navigation',\r\n  templateUrl: './ae-navigation.component.html',\r\n  styleUrls: ['./ae-navigation.component.scss'],\r\n})\r\nexport class AeNavigationComponent {\r\n  @ViewChild('drawer') drawer!: MatSidenav;\r\n  public style = this.navigationService.style$;\r\n  public menu = this.navigationService.menu$;\r\n  public toolbar = this.navigationService.toolbar$;\r\n\r\n  menuIcon: IconType = 'menu';\r\n  arrowLeft: IconType = 'keyboard_arrow_left';\r\n\r\n  isHandset: boolean = false;\r\n  isHandset$: Observable<boolean> = this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map((result) => {\r\n        this.isHandset = result.matches;\r\n        return result.matches;\r\n      })\r\n    );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    public navigationService: AeNavigationService\r\n  ) {}\r\n\r\n  async handler(\r\n    handlerFn: ((event: string) => void) | undefined,\r\n    event: string\r\n  ) {\r\n    if (this.isHandset) {\r\n      // Close the drawer when the menu item click.\r\n      if (event === 'click') this.drawer.close();\r\n    }\r\n\r\n    // if there is a handler assigned to the menu item , run it.\r\n    if (handlerFn) handlerFn(event);\r\n\r\n    return;\r\n  }\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav\r\n    #drawer\r\n    fixedInViewport\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"(isHandset$ | async) === false\"\r\n  >\r\n    <a href=\"https://aemrebas.com\" target=\"__blank\">\r\n      <div class=\"logo\">\r\n        <img width=\"50\" height=\"50\" src=\"/assets/icons/icon-128x128.png\" />\r\n      </div>\r\n    </a>\r\n    <button\r\n      type=\"button\"\r\n      aria-label=\"Close sidenav\"\r\n      mat-icon-button\r\n      (click)=\"drawer.toggle()\"\r\n      class=\"close-sidenav-button\"\r\n    >\r\n      <mat-icon aria-label=\"Side nav toggle icon\"> close </mat-icon>\r\n    </button>\r\n\r\n    <!-- Navigation -->\r\n    <mat-nav-list>\r\n      <!-- Location  -->\r\n      <div class=\"p-4 border-bottom\">\r\n        <ng-content select=\"[nav-list-start]\"></ng-content>\r\n      </div>\r\n      <div class=\"space-20\"></div>\r\n      <!-- Menu -->\r\n      <ng-container *ngFor=\"let menuItem of menu | async\">\r\n        <mat-list-item\r\n          [style]=\"menuItem.style\"\r\n          (click)=\"handler(menuItem.eventHandler, 'click')\"\r\n          (mouseover)=\"handler(menuItem.eventHandler, 'mouseover')\"\r\n          [matTooltip]=\"menuItem.tooltip || ''\"\r\n          matTooltipPosition=\"right\"\r\n          [routerLink]=\"[menuItem.path]\"\r\n          routerLinkActive=\"router-link-active\"\r\n        >\r\n          <mat-icon\r\n            mat-list-icon\r\n            [color]=\"menuItem.iconColor\"\r\n            [matBadge]=\"menuItem.badge\"\r\n            [style]=\"menuItem.iconStyle\"\r\n            matBadgeSize=\"medium\"\r\n            matBadgeColor=\"accent\"\r\n            matBadgePosition=\"after\"\r\n            >{{ menuItem.icon }}</mat-icon\r\n          >\r\n          <div mat-line style=\"font-weight: 500; letter-spacing: 1px\">\r\n            {{ menuItem.label }}\r\n          </div>\r\n        </mat-list-item>\r\n      </ng-container>\r\n\r\n      <!-- Location  -->\r\n      <div class=\"p-4 border-bottom\">\r\n        <ng-content select=\"[nav-list-end]\"></ng-content>\r\n      </div>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content [style]=\"(style | async)?.content\">\r\n    <!-- Location  -->\r\n\r\n    <!-- TOP POSITION -->\r\n    <ng-content select=\"[top]\"></ng-content>\r\n\r\n    <!-- Top main toolbar -->\r\n    <mat-toolbar>\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\" *ngIf=\"!drawer.opened\">\r\n          {{ menuIcon }}\r\n        </mat-icon>\r\n        <mat-icon aria-label=\"Side nav toggle icon\" *ngIf=\"drawer.opened\">\r\n          {{ arrowLeft }}\r\n        </mat-icon>\r\n      </button>\r\n\r\n      <!-- Toolbar  Center -->\r\n      <ng-content select=\"[toolbar-center]\"></ng-content>\r\n\r\n      <div class=\"d-flex w-100 justify-content-between\">\r\n        <div class=\"d-flex w-100 justify-content-start\">\r\n          <!-- Left Buttons -->\r\n          <ng-container *ngFor=\"let toolbarItem of toolbar | async\">\r\n            <a [href]=\"toolbarItem.href\">\r\n              <button\r\n                [style]=\"toolbarItem.style\"\r\n                (click)=\"handler(toolbarItem.eventHandler, 'click')\"\r\n                (mouseover)=\"handler(toolbarItem.eventHandler, 'mouseover')\"\r\n                [matTooltip]=\"toolbarItem.tooltip || ''\"\r\n                mat-icon-button\r\n                *ngIf=\"toolbarItem.position !== 'right'\"\r\n              >\r\n                <mat-icon\r\n                  [color]=\"toolbarItem.iconColor\"\r\n                  [matBadge]=\"toolbarItem.badge\"\r\n                  [style]=\"toolbarItem.iconStyle\"\r\n                  matBadgeSize=\"medium\"\r\n                  matBadgeColor=\"primary\"\r\n                  matBadgePosition=\"after\"\r\n                  >{{ toolbarItem.icon }}</mat-icon\r\n                >\r\n              </button>\r\n            </a>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <!-- Right BUttons -->\r\n        <div class=\"d-flex w-100 justify-content-end\">\r\n          <ng-container *ngFor=\"let toolbarItem of toolbar | async\">\r\n            <a [href]=\"toolbarItem.href\">\r\n              <button\r\n                [style]=\"toolbarItem.style\"\r\n                (click)=\"handler(toolbarItem.eventHandler, 'click')\"\r\n                (mouseover)=\"handler(toolbarItem.eventHandler, 'mouseover')\"\r\n                [matTooltip]=\"toolbarItem.tooltip || ''\"\r\n                mat-mini-fab\r\n                *ngIf=\"toolbarItem.position === 'right'\"\r\n              >\r\n                <mat-icon\r\n                  [style]=\"toolbarItem.iconStyle\"\r\n                  [color]=\"toolbarItem.iconColor\"\r\n                  [matBadge]=\"toolbarItem.badge\"\r\n                  matBadgeSize=\"medium\"\r\n                  matBadgeColor=\"primary\"\r\n                  matBadgePosition=\"after\"\r\n                  >{{ toolbarItem.icon }}</mat-icon\r\n                >\r\n              </button>\r\n            </a>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </mat-toolbar>\r\n\r\n    <div class=\"main-content\">\r\n      <div class=\"container-style\" fxFlex=\"100%\" fxFlex.lt-md=\"100%\">\r\n        <ng-content select=\"[main-content-top]\"></ng-content>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"main-content\">\r\n      <div class=\"container-style\" fxFlex=\"100%\" fxFlex.lt-md=\"100%\">\r\n        <ng-content select=\"[main-content]\"></ng-content>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"main-content\">\r\n      <div class=\"container-style\" fxFlex=\"100%\" fxFlex.lt-md=\"100%\">\r\n        <ng-content select=\"[main-content-bottom]\"></ng-content>\r\n      </div>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { routes } from './app.routes';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      routes.map((r) => ({ path: r.path, component: r.component })),\r\n      { useHash: true }\r\n    ),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}